{"version":3,"sources":["components/Alert.js","components/Menu.js","components/Trailer.js","components/OutlinedCard.js","components/Search.js","components/FiltersDialogue.js","App.js","reportWebVitals.js","index.js"],"names":["SimpleSnackbar","props","React","useState","open","setOpen","useEffect","errors","length","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","action","IconButton","size","aria-label","color","onClick","fontSize","DisabledTabs","Tabs","value","browsing","indicatorColor","textColor","centered","onChange","e","newValue","setBrowsing","Tab","label","useStyles","makeStyles","avatar","backgroundColor","blue","root","maxWidth","overflowY","getColor","rating","isIMDB","SimpleDialog","guColor","movieData","imdbColor","rtColor","classes","selectedValue","getSummary","a","url","process","fetch","response","json","movieInfo","results","setSummary","overview","getTrailer","setLoading","setTrailer","parser","DOMParser","query","encodeURIComponent","replace","console","log","text","data","doc","parseFromString","getTrailerUrl","trailerUrl","setTimeout","movieHTML","getElementsByClassName","getAttribute","split","error","summary","trailer","Dialog","aria-labelledby","width","height","style","frameborder","allow","src","Card","className","CardContent","Typography","variant","component","Container","Grid","container","spacing","marginTop","marginBottom","item","xs","textAlign","pos","minWidth","bullet","display","margin","transform","title","OutlinedCard","imgSrc","showClose","setClose","handleClickOpen","position","onMouseEnter","onMouseLeave","aria-controls","aria-haspopup","top","right","deleteMovie","Link","href","preventDefault","Object","values","join","alt","theme","grow","flexGrow","menuButton","marginRight","breakpoints","up","search","borderRadius","shape","fade","palette","common","white","marginLeft","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","Search","searchText","setSearchText","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","id","keepMounted","transformOrigin","MenuItem","mobileMenuId","renderMobileMenu","setDarkMode","darkMode","AppBar","Toolbar","noWrap","cursor","onSubmit","addMovie","InputBase","placeholder","input","target","inputProps","showFilters","FormControlLabel","control","Switch","checked","name","labelPlacement","currentTarget","Transition","forwardRef","ref","Slide","direction","FiltersDialogue","marks","filters","setFilters","sortBy","setSortBy","TransitionComponent","close","aria-describedby","DialogTitle","DialogContent","FormControl","gutterBottom","RadioGroup","row","defaultValue","sortingCriteria","map","criteria","Radio","sm","md","Slider","min","max","step","valueLabelDisplay","gu","imdb","rt","duration","DialogActions","Button","queryMap","App","storedData","JSON","parse","localStorage","getItem","storedBrowseData","setMovieData","filteredMovies","setFilteredMovies","tmdbMovies","setTmdbMovies","browseMode","setBrowseMode","setErrors","isLoading","setIsLoading","filtersOpen","palletType","createMuiTheme","type","setItem","stringify","moviesToShow","updateFilteredMovies","newMovieData","unsortedMovies","movieDataSorted","comparator","b","imdbRating","googleUsersPercent","rottenTomatoesRating","sort","reverse","filter","movie","durationMins","getTmdbMovies","trending","getMoviesData","moviesData","i","imageUrl","getUrl","newMovie","movieTitle","processMovieData","processedMovieData","googleUsersRating","childNodes","querySelectorAll","innerHTML","metadata","outerText","parseFloat","slice","parseInt","shift","year","genre","trim","ThemeProvider","CssBaseline","then","Box","disabled","float","Select","displayEmpty","selectEmpty","CircularProgress","lg","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d9993dc.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport default function SimpleSnackbar(props) {\n    const [open, setOpen] = React.useState(false);\n\n    useEffect(() => props.errors.length > 0 && setOpen(true), [props.errors])\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    return (\n        <Snackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n            }}\n            open={open}\n            autoHideDuration={6000}\n            onClose={handleClose}\n            message={\"Movie not found: \" + props.errors}\n            action={\n                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n                    <CloseIcon fontSize=\"small\" />\n                </IconButton>\n            }\n        />\n    );\n}","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nexport default function DisabledTabs(props) {\n    return (\n        <Tabs\n            value={props.browsing ? 1 : 0}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n            onChange={(e, newValue) => props.setBrowsing(!props.browsing)}\n            aria-label=\"disabled tabs example\"\n        >\n            <Tab label=\"Search\" />\n            <Tab label=\"Browse\" />\n        </Tabs>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n    root: {\n        maxWidth: 853,\n        overflowY: 'scroll'\n    },\n});\n\nlet getColor = (rating, isIMDB) => {\n    if (isIMDB == true && rating == 10 || rating == 100) {\n        return 'blue';\n    } else if (isIMDB == true && rating > 7.5 || rating > 85) {\n        return '#31b830';\n    } else if (isIMDB == true && rating > 6 || rating > 70) {\n        return 'orange';\n    } else {\n        return '#FF6962';\n    }\n}\n\nexport function SimpleDialog(props) {\n    const guColor = getColor(props.movieData['googleUsersPercent'], false);\n    const imdbColor = getColor(props.movieData['imdbRating'], true);\n    const rtColor = getColor(props.movieData['rottenTomatoesRating'], false);\n\n    const classes = useStyles();\n    const { onClose, selectedValue, open } = props;\n\n    const handleClose = () => {\n        onClose(selectedValue);\n    };\n\n    const handleListItemClick = (value) => {\n        onClose(value);\n    };\n\n    let getSummary = async () => {\n        if (open == true) {\n            let url = `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US&query=${props.movieData['title']}&page=1`\n            let response = await fetch(url);\n            let movieInfo = await response.json();\n            // console.log(movieInfo);\n            if (movieInfo.results[0]) setSummary(movieInfo.results[0].overview);\n        }\n    }\n    let getTrailer = async () => {\n        if (open == true) {\n            setLoading(true);\n            setTrailer(null);\n            const parser = new DOMParser();\n            let query = 'https://www.google.com/search?q=' + encodeURIComponent(props.movieData['title']).replace(/%20/g, \"+\") + \"+trailer&tbm=vid\";\n            console.log(query);\n\n            let response = await fetch(query);\n            let data = await response.text();\n            const doc = parser.parseFromString(data, \"text/html\");\n            let trailerUrl = await getTrailerUrl(doc);\n            setTrailer(trailerUrl);\n            setTimeout(() => setLoading(false), 200); // give time for Youtube iframe to load\n        }\n    }\n\n    let getTrailerUrl = async (movieHTML) => {\n        try {\n            let trailerUrl = movieHTML.getElementsByClassName('rGhul IHSDrd').length > 0 ? movieHTML.getElementsByClassName('rGhul IHSDrd')[0].getAttribute('href') : null;\n            // console.log(trailerUrl);\n            if (trailerUrl != null) {\n                trailerUrl = 'https://www.youtube.com/embed/' + trailerUrl.split(\"v=\")[1];\n            }\n            return trailerUrl;\n        } catch (e) {\n            console.error(e);\n            return null;\n        }\n    }\n\n    useEffect(getSummary, [open]);\n    useEffect(getTrailer, [open]);\n\n    const [summary, setSummary] = useState(null);\n    const [trailer, setTrailer] = useState(null);\n    const [isLoading, setLoading] = useState(false);\n\n    return (\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}\n            maxWidth=\"lg\">\n            {/* { isLoading && <LinearProgress />} */}\n            <iframe width=\"853\" height=\"480\" style={{maxWidth:\"100%\"}} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; fullscreen;\"\n                src={trailer}>\n            </iframe>\n            <Card className={classes.root}>\n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        Summary\n                    </Typography>\n                    <hr />\n                    <Typography variant=\"body1\" component=\"p\" color=\"textSecondary\">\n                        {summary}\n                    </Typography>\n                    <Container maxWidth=\"sm\">\n                        <Grid container spacing={2} style={{ marginTop: '1em', marginBottom: '1em' }}>\n                            <Grid item xs={4} style={{ textAlign: 'center' }}>\n                                <span style={{ color: guColor }}>\n                                    {props.movieData['googleUsersPercent']}%<br />\n                            Google Users\n                            </span>\n                            </Grid>\n                            <Grid item xs={4} style={{ textAlign: 'center' }}>\n                                <span style={{ color: imdbColor }}>\n                                    {props.movieData['imdbRating']}/10<br />\n                            IMDb\n                            </span>\n                            </Grid>\n                            <Grid item xs={4} style={{ textAlign: 'center' }}>\n                                <span style={{ color: rtColor }}>\n                                    {props.movieData['rottenTomatoesRating']}%<br />\n                            Rotten Tomatoes\n                            </span>\n                            </Grid>\n                        </Grid>\n                    </Container>\n                    <hr />\n                    <Typography variant=\"h6\" component=\"h2\">\n                        Other Information\n                    </Typography>\n                    <Grid container spacing={2} style={{ marginTop: '1em', marginBottom: '1em' }}>\n                        <Grid item xs={6}>\n                            <Typography className={classes.pos} color=\"textSecondary\">\n                                Rating: {props.movieData['metadata']['rating']}\n                            </Typography>\n                            <Typography className={classes.pos} color=\"textSecondary\">\n                                Release Date: {props.movieData['metadata']['year']}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography className={classes.pos} color=\"textSecondary\">\n                                Genre: {props.movieData['metadata']['genre']}\n                            </Typography>\n                            <Typography className={classes.pos} color=\"textSecondary\">\n                                Duration: {props.movieData['metadata']['duration']}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n        </Dialog>\n    );\n}\n\nSimpleDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n};\n\nexport default function Trailer(props) {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (value) => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <img\n                src={props.imgSrc}\n                alt=\"new\"\n                width={67 * 1.6}\n                height={100 * 1.6}\n                style={{ height: '100%' }}\n            />\n            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" style={{ position: 'absolute', marginTop: '50px', marginLeft: '-80px' }} onClick={handleClickOpen}>\n                <PlayCircleOutlineIcon fontSize=\"large\" />\n            </IconButton>\n            <SimpleDialog open={open} onClose={handleClose} movieData={props.movieData} />\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Link from '@material-ui/core/Link';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Trailer, { SimpleDialog } from './Trailer';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 400,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nlet getColor = (rating, isIMDB) => {\n  if (isIMDB == true && rating == 10 || rating == 100) {\n    return '#3a5ad1';\n  } else if (isIMDB == true && rating > 7.5 || rating > 85) {\n    return '#31b830'; // '#77DD76';\n  } else if (isIMDB == true && rating > 6 || rating > 70) {\n    return 'orange';\n  } else {\n    return '#FF6962'; // '#db3d00';\n  }\n}\n\n\nexport default function OutlinedCard(props) {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n  const imgSrc = props.movieData['imageUrl'] || 'https://popcornusa.s3.amazonaws.com/placeholder-movieimage.png';\n  const guColor = getColor(props.movieData['googleUsersPercent'], false);\n  const imdbColor = getColor(props.movieData['imdbRating'], true);\n  const rtColor = getColor(props.movieData['rottenTomatoesRating'], false);\n\n  const [showClose, setClose] = useState('none');\n\n  // dialog handler\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n  };\n\n  return (\n    <Card className={classes.root} variant=\"outlined\" style={{ maxWidth: \"450px\", margin: 'auto' }}>\n      <CardContent\n        style={{ position: 'relative' }}\n        onMouseEnter={() => setClose('block')}\n        onMouseLeave={() => setClose('none')}>\n        {!props.browsing &&\n          <IconButton\n            aria-label=\"more\"\n            aria-controls=\"long-menu\"\n            aria-haspopup=\"true\"\n            style={{ position: 'absolute', top: -5, right: -5, display: showClose }}\n            onClick={() => props.deleteMovie(props.movieData['title'])}\n          >\n            <CancelIcon />\n          </IconButton>}\n        <Grid container spacing={4}>\n          <Grid item xs={8}>\n            <Link href=\"#\" onClick={(e) => { e.preventDefault(); handleClickOpen(); }} color=\"inherit\">\n              <Typography variant=\"h6\" component=\"h2\">\n                {props.movieData['title']}\n              </Typography>\n              <Typography className={classes.pos} color=\"textSecondary\">\n                {Object.values(props.movieData['metadata']).join(\" ‧ \")}\n              </Typography>\n            </Link>\n            <Grid container spacing={2} style={{ marginTop: '1.5em' }}>\n              <Grid item xs={4} style={{ textAlign: 'center' }}>\n                {props.movieData['googleUsersPercent'] > 0 ?\n                  <span style={{ color: guColor }}>\n                    {props.movieData['googleUsersPercent']}%<br />\n                Google Users\n                </span>\n                  :\n                  <span>N/A <br /> Google Users</span>\n                }\n              </Grid>\n              <Grid item xs={4} style={{ textAlign: 'center' }}>\n                <span style={{ color: imdbColor }}>\n                  {props.movieData['imdbRating']}/10<br />\n                IMDb\n                </span>\n              </Grid>\n              <Grid item xs={4} style={{ textAlign: 'center' }}>\n                <span style={{ color: rtColor }}>\n                  {props.movieData['rottenTomatoesRating']}%<br />\n                Rotten Tomatoes\n                </span>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={4} >\n            <div>\n              <Link href=\"#\" onClick={(e) => { e.preventDefault(); handleClickOpen(); }} color=\"inherit\">\n                <img\n                  src={imgSrc}\n                  alt=\"new\"\n                  width={67 * 1.6}\n                  height={100 * 1.6}\n                  style={{ height: '100%' }}\n                />\n              </Link>\n              <SimpleDialog open={open} onClose={handleClose} movieData={props.movieData} />\n            </div>\n          </Grid>\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n}","import React, { useState } from 'react';\nimport { fade, makeStyles, createMuiTheme } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: '0.25em',\n        marginBottom: '0.25em',\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nexport default function Search(props) {\n    const [searchText, setSearchText] = useState('');\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            \n            <MenuItem onClick={() => props.setDarkMode(!props.darkMode)}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <Brightness2Icon />\n                </IconButton>\n                <p>Toggle Dark Mode</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    {/* <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        <MenuIcon />\n                    </IconButton> */}\n                    <img src=\"logo.png\" height=\"25px\" width=\"25px\" className={classes.menuButton}/>\n                    <Typography className={classes.title} variant=\"h6\" noWrap style={{cursor:'default'}}>\n                        MovieFinder\n                    </Typography>\n                    <div className={classes.search}>\n                        <form className={classes.root} onSubmit={(e) => props.addMovie(e, searchText)}>\n                            <div className={classes.searchIcon}>\n                                <SearchIcon />\n                            </div>\n                            <InputBase\n                                placeholder=\"Search Movie…\"\n                                classes={{\n                                    root: classes.inputRoot,\n                                    input: classes.inputInput,\n                                }}\n                                onChange={(e) => setSearchText(e.target.value)}\n                                inputProps={{ 'aria-label': 'search' }}\n                            />\n                        </form>\n                    </div>\n                    <IconButton color=\"inherit\" onClick={() => props.showFilters(true)}>\n                        <FilterListIcon />\n                    </IconButton>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <FormControlLabel\n                            control={<Switch\n                                checked={props.darkMode}\n                                onChange={(e) => props.setDarkMode(e.target.checked)}\n                                color=\"default\"\n                                name=\"Dark Mode\"\n                                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                            />}\n                            label=\"Dark Mode\"\n                            labelPlacement=\"start\"\n                        />\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FiltersDialogue(props) {\n\n    const marksIMDb = [\n        {\n            value: 0,\n            label: '0/10',\n        },\n        {\n            value: 10,\n            label: '10/10',\n        },\n    ];\n\n    const marks = [\n        {\n            value: 0,\n            label: '0',\n        },\n        {\n            value: 100,\n            label: '100',\n        },\n    ];\n\n    const marksDuration = [\n        {\n            value: 0,\n            label: '0',\n        },\n        {\n            value: 300,\n            label: '300',\n        },\n    ];\n\n    const [filters, setFilters] = useState(props.filters);\n    const [sortBy, setSortBy] = useState(null);\n\n    const applyFilters = () => {\n        props.setFilters(filters);\n        props.setSortBy(sortBy);\n        props.close();\n    }\n\n    const resetFilters = () => {\n        setFilters({\n            imdb: 0,\n            rt: 0,\n            gu: 0,\n            duration: 240,\n        });\n        setSortBy(null);\n    }\n\n    return (\n        <div>\n            <Dialog\n                open={props.open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={props.close}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <IconButton\n                    aria-label=\"more\"\n                    aria-controls=\"long-menu\"\n                    aria-haspopup=\"true\"\n                    style={{ position: 'absolute', top: -5, right: -5 }}\n                    onClick={props.close}\n                >\n                    <CancelIcon />\n                </IconButton>\n                <DialogTitle id=\"alert-dialog-slide-title\">\n                    Filter Settings\n                </DialogTitle>\n                <DialogContent>\n                    <FormControl component=\"fieldset\">\n                        <Typography gutterBottom>\n                            Sort By\n                        </Typography>\n                        <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" onChange={(e) => setSortBy(e.target.value)} >\n                            {props.sortingCriteria.map(criteria => {\n                                return <FormControlLabel\n                                    value={criteria}\n                                    key={criteria}\n                                    control={<Radio color=\"primary\" />}\n                                    checked={sortBy == criteria}\n                                    label={criteria}\n                                    labelPlacement=\"start\"\n                                />\n                            })}\n                        </RadioGroup>\n                    </FormControl>\n                    <Typography id=\"discrete-slider-always0\" style={{ marginTop: '1em', marginBottom: '1em' }} gutterBottom>\n                        Filter By\n                    </Typography>\n                    <Grid container spacing={4} style={{ marginLeft: '0.5em' }}>\n                        <Grid item xs={12} sm={12} md={6}>\n                            <Typography id=\"discrete-slider-always2\" color=\"textSecondary\" gutterBottom>\n                                Google Users Score &#8805;\n                            </Typography>\n                            <Slider\n                                value={filters['gu']}\n                                aria-labelledby=\"discrete-slider-always2\"\n                                min={0}\n                                max={100}\n                                step={1}\n                                marks={marks}\n                                style={{ maxWidth: '200px' }}\n                                valueLabelDisplay=\"auto\"\n                                onChange={(e, newValue) => setFilters({ ...filters, gu: newValue })}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={6}>\n                            <Typography id=\"discrete-slider-always\" color=\"textSecondary\" gutterBottom>\n                                IMDb Score &#8805;\n                            </Typography>\n                            <Slider\n                                value={filters['imdb']}\n                                aria-labelledby=\"discrete-slider-always\"\n                                min={0}\n                                max={10}\n                                step={0.1}\n                                marks={marksIMDb}\n                                style={{ maxWidth: '200px' }}\n                                valueLabelDisplay=\"auto\"\n                                onChange={(e, newValue) => setFilters({ ...filters, imdb: newValue })}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={6}>\n                            <Typography id=\"discrete-slider-always1\" color=\"textSecondary\" gutterBottom>\n                                Rotten Tomatoes Score &#8805;\n                            </Typography>\n                            <Slider\n                                value={filters['rt']}\n                                aria-labelledby=\"discrete-slider-always1\"\n                                min={0}\n                                max={100}\n                                step={1}\n                                marks={marks}\n                                style={{ maxWidth: '200px' }}\n                                valueLabelDisplay=\"auto\"\n                                onChange={(e, newValue) => setFilters({ ...filters, rt: newValue })}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={6}>\n                            <Typography id=\"discrete-slider-always1\" color=\"textSecondary\" gutterBottom>\n                                Duration &#8804; (mins)\n                    </Typography>\n                            <Slider\n                                value={filters['duration']}\n                                aria-labelledby=\"discrete-slider-always1\"\n                                min={0}\n                                max={300}\n                                step={10}\n                                marks={marksDuration}\n                                style={{ maxWidth: '200px' }}\n                                valueLabelDisplay=\"auto\"\n                                onChange={(e, newValue) => setFilters({ ...filters, duration: newValue })}\n                            />\n                        </Grid>\n                    </Grid>\n                    <br />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={resetFilters}>Reset</Button>\n                    <Button onClick={applyFilters}>Apply</Button>\n                </DialogActions>\n            </Dialog>\n        </div >\n    );\n}","import React, { useState, useEffect } from 'react';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport './App.css';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Alert from './components/Alert';\nimport Menu from './components/Menu';\nimport OutlinedCard from './components/OutlinedCard';\nimport Search from './components/Search';\nimport FiltersDialogue from './components/FiltersDialogue';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst queryMap = {\n  'top': `https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US&page=1`,\n  'trending': `https://api.themoviedb.org/3/trending/movie/week?api_key=${process.env.REACT_APP_TMDB_API_KEY}`,\n  'popular': `https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US&page=1`\n}\n\nfunction App() {\n  // localStorage.removeItem('movieData');\n  // retrieve cached data\n  const storedData = JSON.parse(localStorage.getItem('movieData'));\n  const storedBrowseData = JSON.parse(localStorage.getItem('trending'));\n\n  // movie data\n  const [movieData, setMovieData] = useState(storedData || {}); // complete list of movies\n  const [filteredMovies, setFilteredMovies] = useState(storedData || []); // filtered list of movies\n  const [tmdbMovies, setTmdbMovies] = useState(storedBrowseData || {}); // list of tmdb movies\n  const [browseMode, setBrowseMode] = useState('trending');\n  const [browsing, setBrowsing] = useState(false); // whether 'browse' tab is selected\n\n  // other config\n  const [darkMode, setDarkMode] = useState(false);\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // filtering configuration\n  const [sortBy, setSortBy] = useState(\"none\");\n  const sortingCriteria = [\"Search Order\", \"Google Users\", \"IMDB\", \"Rotten Tomatoes\"];\n  const [filters, setFilters] = useState({\n    imdb: 0,\n    rt: 0,\n    gu: 0,\n    duration: 240,\n  });\n  const [filtersOpen, showFilters] = useState(false);\n\n  // theming\n  const classes = useStyles();\n  const palletType = darkMode ? 'dark' : 'light';\n  const theme = createMuiTheme({\n    palette: {\n      type: palletType,\n    },\n  });\n\n  // update cache for search movies\n  useEffect(() => {\n    // localStorage only accepts strings, so stringify before storing\n    localStorage.setItem('movieData', JSON.stringify(movieData));\n  }, [movieData]);\n\n  // update cache for browse movies\n  useEffect(() => {\n    let moviesToShow = JSON.parse(localStorage.getItem(browseMode)) || {};\n    setTmdbMovies(moviesToShow);\n    updateFilteredMovies(moviesToShow);\n  }, [browseMode]);\n\n  // update data to display on grid of cards\n  useEffect(() => {\n    browsing ? updateFilteredMovies(tmdbMovies) : updateFilteredMovies(movieData);\n  }, [sortBy, filters, browsing]);\n\n  // for debug purposes\n  // useEffect(() => {\n  //   console.error(errors);\n  // }, [errors]);\n\n  // remove movie from cache \n  let deleteMovie = (title) => {\n    let newMovieData = { ...movieData };\n    delete newMovieData[title];\n    setMovieData(newMovieData);\n    updateFilteredMovies(newMovieData);\n  }\n\n  // sort movies and update cards\n  let updateFilteredMovies = (movieData) => {\n    let unsortedMovies = Object.values(movieData);\n    // deep copy first before sorting\n    let movieDataSorted = JSON.parse(JSON.stringify(unsortedMovies));\n    let comparator = null;\n    if (sortBy == 'IMDB') {\n      comparator = (a, b) => b.imdbRating - a.imdbRating;\n    } else if (sortBy == 'Google Users') {\n      comparator = (a, b) => b.googleUsersPercent - a.googleUsersPercent;\n    } else if (sortBy == 'Rotten Tomatoes') {\n      comparator = (a, b) => b.rottenTomatoesRating - a.rottenTomatoesRating;\n    }\n    if (comparator) movieDataSorted.sort(comparator);\n    else movieDataSorted.reverse(); // sort by recently added\n\n    // filter\n    movieDataSorted = movieDataSorted.filter(movie => {\n      return movie.imdbRating >= filters['imdb'] && movie.rottenTomatoesRating >= filters['rt'] && movie.googleUsersPercent >= filters['gu'] && movie.durationMins <= filters['duration']\n    });\n    setFilteredMovies(movieDataSorted);\n  }\n\n  let getTmdbMovies = async () => {\n    setIsLoading(true);\n    let response = await fetch(queryMap[browseMode]);\n    let trending = await response.json();\n    trending = await getMoviesData(trending);\n    setTmdbMovies(trending);\n    updateFilteredMovies(trending);\n    localStorage.setItem(browseMode, JSON.stringify(trending));\n    setIsLoading(false);\n  }\n\n  let getMoviesData = async (trending) => {\n    let moviesData = {};\n    for (let i = 0; i < 20; i++) {\n      // console.log(tmdbMovies);\n      // console.log(trending.results[i].title);\n      // console.log(tmdbMovies[trending.results[i].title]);\n      if (!(trending.results[i].title in tmdbMovies)) {\n        let imageUrl = `https://image.tmdb.org/t/p/w500/${trending.results[i]['poster_path']}`\n        let newMovie = await getUrl(trending.results[i].title, imageUrl);\n        if (newMovie) {\n          moviesData[trending.results[i].title] = newMovie;\n        }\n      } else {\n        // console.log('using cache for movie: ' + trending.results[i].title);\n        moviesData[trending.results[i].title] = tmdbMovies[trending.results[i].title];\n      }\n    }\n    return moviesData;\n  }\n\n  // add a searched movie\n  let addMovie = (e, movieTitle) => {\n    e.preventDefault();\n    getUrl(movieTitle, null).then(newMovie => {\n      // console.log(newMovie);\n      // if movie hasn't already been added, add to movies list\n      if (newMovie && !movieData[newMovie.title]) {\n        let title = newMovie.title;\n        let newMovieData = { ...movieData };\n        newMovieData[title] = newMovie;\n        setMovieData(newMovieData);\n        updateFilteredMovies(newMovieData);\n      }\n    });\n  }\n\n  // google scrape movie by title\n  let getUrl = async (movieTitle, imageUrl) => {\n    const parser = new DOMParser();\n    let query = 'https://www.google.com/search?q=' + encodeURIComponent(movieTitle).replace(/%20/g, \"+\");\n    // console.log(query);\n\n    let response = await fetch(query);\n    let data = await response.text();\n    const doc = parser.parseFromString(data, \"text/html\");\n    let processedMovieData = await processMovieData(doc, movieTitle, imageUrl);\n    return processedMovieData;\n  }\n\n  let processMovieData = async (movieHTML, movieTitle, imageUrl) => {\n    try {\n\n      let googleUsersRating = movieHTML.getElementsByClassName('srBp4 Vrkhme').length > 0 ? movieHTML.getElementsByClassName('srBp4 Vrkhme')[0].childNodes[0].data : null; // not all movies have google user ratings\n      let imdbRating = movieHTML.querySelectorAll('span.gsrt')[0].innerHTML;\n      let rottenTomatoesRating = movieHTML.querySelectorAll('span.gsrt')[1].innerHTML;\n      let metadata = (movieHTML.getElementsByClassName('wx62f PZPZlf x7XAkb')[0] || movieHTML.querySelectorAll('div.wwUB2c.PZPZlf span')[0]).outerText.split(\"‧\");\n      let title = (movieHTML.querySelectorAll('span.u9DLmf')[0] || movieHTML.querySelectorAll('h2.qrShPb.kno-ecr-pt.PZPZlf.mfMhoc span')[0]).innerHTML.replace('&amp;', '&');\n      imageUrl = imageUrl || (movieHTML.querySelectorAll('g-img.ivg-i.PZPZlf').length > 0 ? movieHTML.querySelectorAll('g-img.ivg-i.PZPZlf')[0].getAttribute(\"data-lpage\") : null); // not all movies have image thumbnails\n\n      // backup image url option (alternate format)\n      if (imageUrl == null) {\n        let query = encodeURIComponent(movieTitle).replace(/%20/g, \"+\");\n        let response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=210fc31dd8bed65f0aaba2bf322a7627&language=en-US&query=${query}&page=1&include_adult=false`);\n        let json = await response.json();\n        if (json.results.length > 0) {\n          if (json.results[0].title == title) {\n            imageUrl = `https://image.tmdb.org/t/p/w500/${json.results[0]['poster_path']}`;\n          }\n        }\n      }\n\n      // convert ratings into numbers\n      imdbRating = parseFloat(imdbRating.slice(0, 3));\n      rottenTomatoesRating = parseInt(rottenTomatoesRating.slice(0, 3));\n      let googleUsersPercent = googleUsersRating ? parseInt(googleUsersRating.slice(0, 2)) : 0;\n\n      let [rating, year] = metadata.shift().split(\" \").slice(0, 2);\n      let [genre, duration] = metadata;\n      genre = genre.trim();\n      duration = duration.trim();\n      let durationMins = parseInt(duration[0]) * 60 + parseInt(duration.split(\" \")[1].slice(0, -1))\n      metadata = {\n        rating, year, genre, duration\n      }\n      // console.log(trailerUrl);\n      // console.log(title);\n      // console.log(googleUsersRating);\n      // console.log(\"IMBD: \" + imdbRating);\n      // console.log(\"Rotton Tomatoes: \" + rottenTomatoesRating);\n      // console.log(metadata);\n\n      return {\n        googleUsersRating,\n        googleUsersPercent,\n        imdbRating,\n        rottenTomatoesRating,\n        metadata,\n        durationMins,\n        title,\n        imageUrl,\n        // trailerUrl\n      };\n    } catch (e) {\n      console.error(e);\n      setErrors(movieTitle);\n      return null;\n    }\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Search\n        addMovie={addMovie}\n        darkMode={darkMode}\n        setDarkMode={setDarkMode}\n        showFilters={showFilters} />\n      <Container maxWidth=\"xl\" >\n        <Box width=\"85%\" style={{ margin: 'auto' }}>\n          <div className={classes.root}>\n            <Menu browsing={browsing} setBrowsing={setBrowsing} />\n          </div>\n          {browsing &&\n            <Box style={{ textAlign: 'center' }}>\n              <Button onClick={getTmdbMovies} color=\"primary\" disabled={isLoading} style={{ float: 'left' }}><RefreshIcon /></Button>\n              <Select\n                value={browseMode}\n                onChange={(e) => setBrowseMode(e.target.value)}\n                displayEmpty\n                className={classes.selectEmpty}\n                inputProps={{ 'aria-label': 'Without label' }}\n              >\n                <MenuItem value={'trending'}>Trending</MenuItem>\n                <MenuItem value={'popular'}>Popular (TMDb)</MenuItem>\n                <MenuItem value={'top'}>Top Rated</MenuItem>\n              </Select>\n            </Box>\n          }\n          {isLoading &&\n            <Box style={{ textAlign: 'center', marginTop: '2em' }}>\n              <CircularProgress size={50} />\n            </Box>\n          }\n          <Grid container spacing={4}>\n            {filteredMovies[0] && filteredMovies.map((movie) => {\n              return (\n                <Grid item sm={12} md={6} lg={4} key={movie.title}>\n                  <OutlinedCard movieData={movie} deleteMovie={deleteMovie} browsing={browsing} />\n                </Grid>\n              )\n            })}\n          </Grid>\n          <Alert errors={errors} />\n        </Box>\n        <FiltersDialogue\n          open={filtersOpen}\n          close={() => showFilters(false)}\n          filters={filters}\n          setFilters={setFilters}\n          sortingCriteria={sortingCriteria}\n          sortBy={sortBy}\n          setSortBy={setSortBy} />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}